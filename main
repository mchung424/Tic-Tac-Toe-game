package com.example.myapplication;

import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.GridLayout;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {
    int activePlayer = 0;
    boolean gameIsActive = true;
    //2 mean unplayed
    int [] gameState = {2,2,2,2,2,2,2,2,2};
    public void dropIn (View view) {
        ImageView counter = (ImageView) view;
        int tappedCounter = Integer.parseInt(counter.getTag().toString());
        if (gameState[tappedCounter] == 2 && gameIsActive) {
            gameState[tappedCounter] = activePlayer;
            counter.setTranslationY(-1000f);
            if (activePlayer == 0) {
                counter.setImageResource(R.drawable.yellow);
                activePlayer = 1
            } else {
                counter.setImageResource(R.drawable.red);
                activePlayer = 0;
            }
            counter.animate().translationYBy(1000f).rotation(360).setDuration(300);
            for (int i = 0; i<gameState.length;i++) {
                if (((gameState[0] == 1) && (gameState[1] == 1) && (gameState[2] == 1)) || ((gameState[3] == 1) && (gameState[4] == 1) && (gameState[5] == 1)) ||
                        ((gameState[6] == 1) && (gameState[7] == 1) && (gameState[8] == 1)) || ((gameState[0] == 1) && (gameState[3] == 1) && (gameState[6] == 1)) ||
                        ((gameState[1] == 1) && (gameState[4] == 1) && (gameState[7] == 1)) || ((gameState[2] == 1) && (gameState[5] == 1) && (gameState[8] == 1)) ||
                        ((gameState[0] == 1) && (gameState[4] == 1) && (gameState[8] == 1)) || ((gameState[2] == 1) && (gameState[4] == 1) && (gameState[6] == 1))) {
                    Log.i("Player 2", "Wins!");//player2 winner
                    gameIsActive = false;
                    Toast.makeText(this, "Player 2 Wins!", Toast.LENGTH_SHORT).show();
                    Button playAgain = (Button) findViewById(R.id.playAgain);
                    TextView winnerText = (TextView) findViewById(R.id.textView);
                    playAgain.setVisibility(View.VISIBLE);
                    winnerText.setText("Player 2 wins!");
                    winnerText.setVisibility(View.VISIBLE);


                }
                if (((gameState[0] == 0) && (gameState[1] == 0) && (gameState[2] == 0)) || ((gameState[3] == 0) && (gameState[4] == 0) && (gameState[5] == 0)) ||
                        ((gameState[6] == 0) && (gameState[7] == 0) && (gameState[8] == 0)) || ((gameState[0] == 0) && (gameState[3] == 0) && (gameState[6] == 0)) ||
                        ((gameState[1] == 0) && (gameState[4] == 0) && (gameState[7] == 0)) || ((gameState[2] == 0) && (gameState[5] == 0) && (gameState[8] == 0)) ||
                        ((gameState[0] == 0) && (gameState[4] == 0) && (gameState[8] == 0)) || ((gameState[2] == 0) && (gameState[4] == 0) && (gameState[6] == 0))) {
                    Log.i("Player 1", "Wins!");//player2 winner
                    gameIsActive = false;
                    Toast.makeText(this, "Player 1 Wins!", Toast.LENGTH_SHORT).show();
                    Button playAgain = (Button) findViewById(R.id.playAgain);
                    TextView winnerText = (TextView) findViewById(R.id.textView);
                    playAgain.setVisibility(View.VISIBLE);
                    winnerText.setText("Player 1 wins!");
                    winnerText.setVisibility(View.VISIBLE);

                }
                }
            }
        }
        public void playAgain (View view){ //function of button is to reset game board
            Button playAgain = (Button) findViewById(R.id.playAgain);
            TextView winnerText = (TextView) findViewById(R.id.textView);
            playAgain.setVisibility(View.INVISIBLE);
            winnerText.setVisibility(View.INVISIBLE);
            GridLayout gameBoard = (GridLayout) findViewById(R.id.gameBoard);
            for(int i=0; i<gameBoard.getChildCount(); i++) { //resetting game board
                ImageView counter = (ImageView)gameBoard.getChildAt(i);
                counter.setImageDrawable(null); //setting counter to not viewable
            }
            for (int i=0; i<gameState.length; i++){ //resetting game state
                gameState[i]=2;
            }
            gameIsActive = true;
            activePlayer = 0;
        }


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
}
